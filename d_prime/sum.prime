    .align 32
sumrec: # unsigned long sumnaive(unsigned long n)
    movq %rcx, %rax
    cbe $0, %rcx, L1
    subq $16, %rsp
    movq %rax, (%rsp)
    movq %r11, 8(%rsp)
    subq $1, %rcx
    call sumrec, %r11
    movq (%rsp), %rcx
    movq 8(%rsp), %r11
    addq $16, %rsp
    addq %rcx, %rax
L1:
    ret %r11

    .align 32
sumloop:
    xorq %rax, %rax
L2:
    cbe $0, %rcx, L3
    addq %rcx, %rax
    subq $1, %rcx
    jmp L2
L3:
    ret %r11

    .align 32
sumgauss:
    leaq 1(%rcx), %rax
    mulq %rcx, %rax
    shrq $1, %rax
    ret %r11

    .align 32
startr:
    movq $45, %rcx
    call sumrec, %r11
    movq %rax, %rax
    stop
    .align 32
startl:
    movq $45, %rcx
    call sumloop, %r11
    movq %rax, %rax
    stop
    .align 32
startl2:
    movq $5, %rcx
    call sumloop, %r11
    movq %rax, %rax
    stop
    .align 32
startg:
    movq $45, %rcx
    call sumgauss, %r11
    movq %rax, %rax
    stop
    .align 32
startginlined:
    movq $45, %rcx
    leaq 1(%rcx), %rax
    mulq %rcx, %rax
    shrq $1, %rax
    movq %rax, %rax
    stop
    .align 32
startg2:
    movq $5, %rcx
    call sumgauss, %r11
    movq %rax, %rax
    stop
    .align 32
startg3:
    movq $400, %rcx
    call sumgauss, %r11
    movq %rax, %rax
    stop
